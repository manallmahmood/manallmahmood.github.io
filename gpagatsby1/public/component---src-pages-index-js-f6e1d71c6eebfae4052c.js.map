{"version":3,"file":"component---src-pages-index-js-f6e1d71c6eebfae4052c.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/uuid/dist/esm-browser/native.js","webpack://gatsby-starter-default/./node_modules/uuid/dist/esm-browser/rng.js","webpack://gatsby-starter-default/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://gatsby-starter-default/./node_modules/uuid/dist/esm-browser/v4.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import React, { useState, useEffect } from \"react\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport courses from \"./cs-2021.json\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nexport default function App() {\n  const [course, setCourse] = useState([{ id: uuidv4(), value: 0, course: \"\" }])\n  const [average, setAverage] = useState(0)\n  const [courseList, setCourseList] = useState([])\n  const [grade, setGrade] = useState([4.0])\n  const [semesterNumber, setSemesterNumber] = useState(\"1\")\n  const [cgpa, setCgpa] = useState(0)\n  const [semesters, setSemesters] = useState([\n    {\n      semesterLabel: `Semester ${semesterNumber}`,\n      courses: course,\n      gpa: 0,\n      grades: grade,\n    },\n  ])\n  const markingScheme = [\n    { name: \"A\", value: 4.0 },\n    { name: \"A-\", value: 3.75 },\n    { name: \"B+\", value: 3.25 },\n    { name: \"B\", value: 3.0 },\n    { name: \"B-\", value: 2.75 },\n    { name: \"C+\", value: 2.25 },\n    { name: \"C\", value: 2.0 },\n    { name: \"C-\", value: 1.75 },\n    { name: \"D\", value: 1.0 },\n    { name: \"F\", value: 0 },\n  ]\n  const [major, setMajor] = useState(\"CS\")\n  const handleMajorChange = event => {\n    setMajor(event.target.value)\n  }\n\n  const index = 0;\n\n  useEffect(() => {\n    setCourseList(courses)\n  }, [])\n\n  const addCourse = Semester => {\n    let foundSemester = semesters.find(\n      semesterObj => semesterObj.semesterNumber === Semester.semesterNumber\n    )\n    console.log(\"foundSemester\", foundSemester)\n    foundSemester.courses = [\n      ...foundSemester.courses,\n      { id: uuidv4(), value: 0, course: \"\" },\n    ]\n    foundSemester.grades = [...foundSemester.grades, 4.0]\n    let index = semesters.findIndex(\n      semesterObj => semesterObj.semesterNumber === Semester.semesterNumber\n    )\n    semesters[index] = foundSemester\n    setSemesters([...semesters])\n    // setCourse(course => [...course, { id: uuidv4(), value: 0, course: \"\" }])\n    // setGrade([...grade, 4.0])\n  }\n\n  const deleteCourse = (Semesters, semesterIndex, index) => {\n    Semesters[semesterIndex]?.courses?.splice(index, index)\n    setSemesters([...Semesters])\n\n    // setGrade(grade => grade.filter((_, i) => i !== index))\n  }\n  const handleCourseChange = (index, event, semester) => {\n    let foundSemester = semesters.find(\n      semesterObj => semesterObj.semesterNumber === semester.semesterNumber\n    )\n\n    let indexF = semesters.findIndex(\n      semesterObj => semesterObj.semesterNumber === semester.semesterNumber\n    )\n    semesters[indexF].courses[index].value = event.target.value\n    console.log(event.target.value)\n    console.log(foundSemester)\n    // const newCourse = [...course]\n    // newCourse[index].course = event.target.value\n    // setCourse(newCourse)\n  }\n\n  const handleGradeChange = (pickedCourse, e, semesters, semesterIndex) => {\n    const selectedCourse = semesters[semesterIndex].courses.find(\n      c => c.id === pickedCourse.id\n    )\n    const gotGrade = markingScheme.find(\n      markingSchemeObj =>\n        markingSchemeObj.name.toString() === e.target.value.toString()\n    )\n    semesters[semesterIndex].grades[      semesters[semesterIndex].grades.length - 1\n    ] = gotGrade.value\n    semesters[semesterIndex].grades = [...semesters[semesterIndex].grades]\n    setSemesters([...semesters])\n    const cgpa = semesters.reduce((total, semester) => total + semester.gpa, 0) / semesters.length\n    setCgpa(cgpa.toFixed(2))\n  }\n\n  const calculateGPA = (semester, semesterIndex) => {\n    let sum = 0\n    let count = 0\n  \n    semester[semesterIndex].grades.forEach(grade => {\n      sum += grade\n      count++\n    })\n    const gpa = sum / count\n    semester[semesterIndex].gpa = gpa\n    setSemesters([...semesters])\n  \n    let totalGPA = 0\n    let totalSemesters = 0\n    semesters.forEach(semester => {\n      totalGPA += semester.gpa\n      totalSemesters++\n    })\n    setCgpa(totalGPA / totalSemesters)\n  }\n  \n\n  const addSemester = () => {\n    setSemesterNumber(semesterNumber + 1)\n    setSemesters([...semesters, {\n      semesterLabel: `Semester ${semesterNumber}`,\n      semesterNumber: semesterNumber + 1,\n      courses: course,\n      gpa: 0,\n      grades: grade,\n    }])\n  }\n  return (\n    <div\n      className=\"App\"\n      style={{\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        justifyContent: \"centre\",\n        height: \"100vh\",\n        backgroundColor: \"white\", \n        flexDirection: \"column\",\n        \n\n      }}\n      >\n        <div\n         className=\"header\"\n         style={{\n         backgroundColor: \"rgb(0, 153, 255)\",\n         boxShadow: \"4px 4px 20px rgba(0, 0, 0, 0.5), -4px -4px 20px rgba(255, 255, 255, 0.8)\",\n         width: \"100%\",\n         height: \"90px\",\n         display: \"flex\",\n         justifyContent: \"center\",\n         alignItems: \"center\",\n    }}\n  >\n              <h1 style={{ color: \"white\", margin: 0 }}>GPA Calculator</h1>\n            </div>\n            <div\n              style={{\n              position: \"relative\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              margin: \"auto\",\n              width: \"50%\",\n              padding: \"20px\",\n              marginTop: \"70px\",\n              backgroundColor: \"white\",\n              boxShadow: \"4px 4px 20px rgba(0, 0, 0, 0.5), -4px -4px 20px rgba(255, 255, 255, 0.8)\",\n              borderRadius: \"20px\"\n\n            }}\n          >\n             <div\n               style={{\n                 position: \"relative\",\n                 zIndex: 1,\n                 opacity: 5,\n\n             }}\n           ><div\n           style={{\n             display: \"flex\",\n             alignItems: \"center\",\n             justifyContent: \"space-between\",\n             width: \"100%\",\n             margin: \"10px\"\n           }}\n         >\n           <div\n             style={{\n               backgroundColor: \"rgb(0, 153, 255)\",\n               boxShadow: \"4px 4px 20px rgba(0, 0, 0, 0.5), -4px -4px 20px rgba(255, 255, 255, 0.8)\",\n               padding: \"10px\",\n               display: \"flex\",\n               alignItems: \"center\",\n               borderRadius: \"20px\",\n               height: \"40px\"\n             }}\n           >\n             <label\n               style={{\n                 fontSize: \"23px\",\n                 fontWeight: \"bold\",\n                 color: \"white\",\n                 fontFamily: \"Andalé Mono, monospace\"\n               }}\n             >\n               Major:{\" \"}\n             </label>\n             <select style={{ fontSize: \"15px\", color: \"white\" }} value={major} onChange={handleMajorChange}>\n               <option value=\"CS\">CS</option>\n               <option value=\"IT\">IT</option>\n             </select>\n           </div>\n           <div\n             style={{\n               backgroundColor: \"rgb(0, 153, 255)\",\n               boxShadow: \"4px 4px 20px rgba(0, 0, 0, 0.5), -4px -4px 20px rgba(255, 255, 255, 0.8)\",\n               padding: \"10px\",\n               display: \"flex\",\n               alignItems: \"center\",\n               borderRadius: \"20px\",\n               height: \"40px\"\n             }}\n           >\n             <label\n               style={{\n                 fontSize: \"23px\",\n                 fontWeight: \"bold\",\n                 color: \"white\",\n                 fontFamily: \"Andalé Mono, monospace\"\n               }}\n             >\n               CGPA: {cgpa}{\" \"}\n             </label>\n           </div>\n         </div>\n         \n            \n      {semesters.map((Semester, semesterIndex) => {\n        return (\n          <>\n              <div style={{ \n                position: \"relative\", \n                opacity: 1\n                }}>\n                \n              </div>\n\n              \n              <h2 style={{ color: \"black\", fontWeight: \"bold\", fontFamily: \"Andalé Mono, monospace\", fontSize:\"25px\", marginBottom: 0 }}>Semester:</h2>\n              <button type=\"button\" class=\"btn btn-outline-dark\"  onClick={() => addSemester()}>Add Semester</button>\n\n              {Semester.courses.map((g, i) => {\n                return (\n                  <div key={g.id}>\n                   \n                   <label style={{fontSize: \"20px\",fontFamily: \"Optima, sans-serif\", color: \"black\"}}>Course:</label>\n                    <select\n                      value={g.course.name}\n                      onChange={e => handleCourseChange(i, e, Semester)}\n                      style={{ width: \"150px\" }}\n                    >\n                      {courseList.curriculum &&\n                        courseList.curriculum.courses.map(courseGroup => (\n                          <optgroup\n                            label={courseGroup.groupName}\n                            key={courseGroup.groupName}\n                          >\n                            {courseGroup.subjects.map(subject => (\n                              <option key={subject.code} value={subject.code}>\n                                {subject.name}\n                              </option>\n                            ))}\n                          </optgroup>\n                        ))}\n                    </select>\n                    <label style={{fontSize: \"20px\",fontFamily: \"Optima, sans-serif\", color: \"black\"}}>    Grade:</label>\n                    <select\n                      value={grade.mark}\n                      onChange={e =>\n                        handleGradeChange(g, e, semesters, semesterIndex)\n                      }\n                    >\n                      {markingScheme.map(grade => (\n                        <option key={grade.name} value={grade.name}>\n                          {grade.name}\n                        </option>\n                      ))}\n                    </select>\n                    <button type=\"button\" class=\"btn btn-outline-dark\" \n                      onClick={() => deleteCourse(semesters, semesterIndex, i)}\n                    >\n                      Delete Course\n                    </button>\n                  </div>\n                );\n              })}\n\n              <button type=\"button\" class=\"btn btn-outline-dark\" onClick={() => addCourse(Semester)}>\n                 Add Course\n              </button>\n              <button type=\"button\" class=\"btn btn-outline-dark\" \n                onClick={() => calculateGPA(semesters, semesterIndex)}\n              >\n                Calculate GPA\n              </button>\n              <p style={{color: \"black\", fontWeight: \"bold\",fontFamily: \"Optima, sans-serif\",fontSize: \"28px\"}}>Your GPA is: {semesters[semesterIndex].gpa}</p>\n          </>\n        )\n      })}\n    </div>\n         </div>\n      </div>\n  )}"],"names":["randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","toLowerCase","options","buf","rnds","random","App","course","setCourse","useState","id","uuidv4","value","average","setAverage","courseList","setCourseList","grade","setGrade","semesterNumber","setSemesterNumber","cgpa","setCgpa","semesters","setSemesters","semesterLabel","courses","gpa","grades","markingScheme","name","major","setMajor","useEffect","className","style","display","alignItems","justifyContent","height","backgroundColor","flexDirection","boxShadow","width","color","margin","position","padding","marginTop","borderRadius","zIndex","opacity","fontSize","fontWeight","fontFamily","onChange","event","target","map","Semester","semesterIndex","marginBottom","type","class","onClick","g","key","e","index","semester","foundSemester","find","semesterObj","indexF","findIndex","console","log","handleCourseChange","curriculum","courseGroup","label","groupName","subjects","subject","code","mark","pickedCourse","c","gotGrade","markingSchemeObj","length","reduce","total","toFixed","handleGradeChange","Semesters","splice","deleteCourse","addCourse","sum","count","forEach","totalGPA","totalSemesters","calculateGPA"],"sourceRoot":""}