{"version":3,"file":"component---src-pages-index-js-ba05f043f2a56f0c080c.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/uuid/dist/esm-browser/native.js","webpack://gatsby-starter-default/./node_modules/uuid/dist/esm-browser/rng.js","webpack://gatsby-starter-default/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://gatsby-starter-default/./node_modules/uuid/dist/esm-browser/v4.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import React, { useState, useEffect } from \"react\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport courses from \"./cs-2021.json\"\n\nexport default function App() {\n  const [course, setCourse] = useState([{ id: uuidv4(), value: 0, course: \"\" }])\n  const [average, setAverage] = useState(0)\n  const [courseList, setCourseList] = useState([])\n  const [grade, setGrade] = useState([4.0])\n  const [semesterNumber, setSemesterNumber] = useState(1)\n  const [semesters, setSemesters] = useState([\n    {\n      semesterNumber: semesterNumber,\n      courses: course,\n      gpa: 0,\n      grades: grade,\n    },\n  ])\n  const markingScheme = [\n    { name: \"A\", value: 4.0 },\n    { name: \"A-\", value: 3.75 },\n    { name: \"B+\", value: 3.25 },\n    { name: \"B\", value: 3.0 },\n    { name: \"B-\", value: 2.75 },\n    { name: \"C+\", value: 2.25 },\n    { name: \"C\", value: 2.0 },\n    { name: \"C-\", value: 1.75 },\n    { name: \"D\", value: 1.0 },\n    { name: \"F\", value: 0 },\n  ]\n\n  const [major, setMajor] = useState(\"CS\")\n  const handleMajorChange = event => {\n    setMajor(event.target.value)\n  }\n\n  useEffect(() => {\n    setCourseList(courses)\n  }, [])\n\n  // useEffect(() => {\n  //   const averageFromLocalStorage = localStorage.getItem(\"average\")\n  //   if (averageFromLocalStorage) {\n  //     setAverage(parseFloat(averageFromLocalStorage))\n  //   }\n  // }, [])\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"average\", average)\n  // }, [average])\n\n  const addCourse = Semester => {\n    let foundSemester = semesters.find(\n      semesterObj => semesterObj.semesterNumber === Semester.semesterNumber\n    )\n    console.log(\"foundSemester\", foundSemester)\n    foundSemester.courses = [\n      ...foundSemester.courses,\n      { id: uuidv4(), value: 0, course: \"\" },\n    ]\n    foundSemester.grades = [...foundSemester.grades, 4.0]\n    let index = semesters.findIndex(\n      semesterObj => semesterObj.semesterNumber === Semester.semesterNumber\n    )\n    semesters[index] = foundSemester\n    setSemesters([...semesters])\n    // setCourse(course => [...course, { id: uuidv4(), value: 0, course: \"\" }])\n    // setGrade([...grade, 4.0])\n  }\n\n  const deleteCourse = (Semesters, semesterIndex, index) => {\n    Semesters[semesterIndex]?.courses?.splice(index, index)\n    setSemesters([...Semesters])\n\n    // setGrade(grade => grade.filter((_, i) => i !== index))\n  }\n  const handleCourseChange = (index, event, semester) => {\n    let foundSemester = semesters.find(\n      semesterObj => semesterObj.semesterNumber === semester.semesterNumber\n    )\n\n    let indexF = semesters.findIndex(\n      semesterObj => semesterObj.semesterNumber === semester.semesterNumber\n    )\n    semesters[indexF].courses[index].value = event.target.value\n    console.log(event.target.value)\n    console.log(foundSemester)\n    // const newCourse = [...course]\n    // newCourse[index].course = event.target.value\n    // setCourse(newCourse)\n  }\n\n  const handleGradeChange = (pickedCourse, e, semesters, semesterIndex) => {\n    console.log(\"In grade change\")\n    console.log(\"e\", e.target.value)\n    const selectedCourse = semesters[semesterIndex].courses.find(\n      c => c.id === pickedCourse.id\n    )\n    const gotGrade = markingScheme.find(\n      markingSchemeObj =>\n        markingSchemeObj.name.toString() === e.target.value.toString()\n    )\n\n    console.log(\"selectedCourse\", selectedCourse)\n    console.log(\"gotGrade\", gotGrade)\n    if (selectedCourse) {\n      // const index = course.indexOf(selectedCourse)\n      // console.log(\"index\", index)\n      // const newGrade = [...grade]\n      // newGrade[index].mark = gotGrade.value\n      // console.log(\"newGrade\", newGrade)\n\n      semesters[semesterIndex].grades[\n        semesters[semesterIndex].grades.length - 1\n      ] = gotGrade.value\n      semesters[semesterIndex].grades = [...semesters[semesterIndex].grades]\n      setSemesters([...semesters])\n      // setGrade([...grade, gotGrade.value])\n      // calculateGPA()\n    }\n  }\n\n  const calculateGPA = (semester, semesterIndex) => {\n    let sum = 0\n    let count = grade.length\n    console.log(\"grades\", grade)\n\n    semester[semesterIndex].grades.forEach(g => {\n      sum = sum + g\n    })\n    // course.forEach(g => {\n    //   sum += markingScheme.value\n    //   count++\n    //   console.error(`No value found for grade: ${g.mark}`)\n    // })\n\n    let calculatedGPA = sum / semester[semesterIndex].grades.length\n    console.log(\"sum\", sum)\n    console.log(\"count\", count)\n\n    semester[semesterIndex].gpa = calculatedGPA\n    setSemesters([...semester])\n    // setAverage(calculatedGPA)\n    console.log(\"The GPA is \", calculatedGPA)\n  }\n\n  const addSemester = () => {\n    setSemesters([\n      ...semesters,\n      {\n        semesterNumber: semesters.length + 1,\n        courses: course,\n        grades: grade,\n      },\n    ])\n  }\n\n  const handleSemesterCourseChange = (index, e) => {\n    const newSemesters = [...semesters]\n    newSemesters[index].selectedCourse = e.target.value\n    setSemesters(newSemesters)\n  }\n\n  const handleSemesterSchemeChange = (index, e) => {\n    const newSemesters = [...semesters]\n    newSemesters[index].selectedGrade = e.target.value\n    setSemesters(newSemesters)\n  }\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n        backgroundColor: \"black\",\n      }}\n    >\n      {semesters.map((Semester, semesterIndex) => {\n        return (\n          <>\n            <div\n              className=\"title\"\n              style={{\n                textAlign: \"center\",\n                position: \"absolute\",\n                top: 100,\n                zIndex: 1,\n                marginBottom: \"20px\",\n              }}\n            >\n              <h1 style={{ color: \"white\" }}>GPA Calculator</h1>\n            </div>\n            <div\n              style={{\n                backgroundColor: \"white\",\n                width: \"50%\",\n                padding: \"20px\",\n                borderRadius: \"15px\",\n              }}\n            >\n              <div style={{ position: \"relative\" }}>\n                <label>Major</label>\n                <select value={major} onChange={handleMajorChange}>\n                  <option value=\"CS\">CS</option>\n                  <option value=\"IT\">IT</option>\n                </select>\n              </div>\n\n              <button onClick={() => addSemester()}>Add Semester</button>\n\n              {Semester.courses.map((g, i) => {\n                return (\n                  <div key={g.id}>\n                    <label>Course:</label>\n                    <select\n                      value={g.course.name}\n                      onChange={e => handleCourseChange(i, e, Semester)}\n                      style={{ width: \"150px\" }}\n                    >\n                      {courseList.curriculum &&\n                        courseList.curriculum.courses.map(courseGroup => (\n                          <optgroup\n                            label={courseGroup.groupName}\n                            key={courseGroup.groupName}\n                          >\n                            {courseGroup.subjects.map(subject => (\n                              <option key={subject.code} value={subject.code}>\n                                {subject.name}\n                              </option>\n                            ))}\n                          </optgroup>\n                        ))}\n                    </select>\n                    <label> Grade:</label>\n                    <select\n                      value={grade.mark}\n                      onChange={e =>\n                        handleGradeChange(g, e, semesters, semesterIndex)\n                      }\n                    >\n                      {markingScheme.map(grade => (\n                        <option key={grade.name} value={grade.name}>\n                          {grade.name}\n                        </option>\n                      ))}\n                    </select>\n\n                    <button\n                      type=\"button\"\n                      onClick={() => deleteCourse(semesters, semesterIndex, i)}\n                    >\n                      Delete Course\n                    </button>\n                  </div>\n                )\n              })}\n\n              <button type=\"button\" onClick={() => addCourse(Semester)}>\n                Add Course\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => calculateGPA(semesters, semesterIndex)}\n              >\n                Calculate GPA\n              </button>\n              <p>Your GPA is: {semesters[semesterIndex].gpa}</p>\n            </div>\n          </>\n        )\n      })}\n    </div>\n  )\n}\n"],"names":["randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","toLowerCase","options","buf","rnds","random","App","course","setCourse","useState","id","uuidv4","value","average","setAverage","courseList","setCourseList","grade","setGrade","semesterNumber","setSemesterNumber","semesters","setSemesters","courses","gpa","grades","markingScheme","name","major","setMajor","handleMajorChange","event","target","useEffect","className","style","display","alignItems","justifyContent","height","backgroundColor","map","Semester","semesterIndex","textAlign","position","top","zIndex","marginBottom","color","width","padding","borderRadius","onChange","onClick","length","g","key","e","index","semester","foundSemester","find","semesterObj","indexF","findIndex","console","log","handleCourseChange","curriculum","courseGroup","label","groupName","subjects","subject","code","mark","pickedCourse","selectedCourse","c","gotGrade","markingSchemeObj","handleGradeChange","type","Semesters","splice","deleteCourse","addCourse","sum","count","forEach","calculatedGPA","calculateGPA"],"sourceRoot":""}